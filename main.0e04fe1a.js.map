{"version":3,"sources":["node_modules/random-words/index.js","node_modules/sweetalert/dist/sweetalert.min.js","main.js"],"names":["waterDrop","Audio","src","randomWords","require","loosingMsg","winningMsg","randomMsg","Math","floor","random","length","randomWmessage","words","randomLetter","twoLetter","threeLetter","fourLetter","fiveLetter","sixLetter","sevenLetter","eightLetter","nineLetter","tenLetter","megaLetter","i","push","categoryValue","document","querySelector","addEventListener","categorySelect","randomWord","myButton","myHeader","evt","preventDefault","location","reload","wordBank","life","lifes","target","value","innerHTML","msg","SpeechSynthesisUtterance","rate","window","speechSynthesis","speak","toUpperCase","myP","console","log","myDiv","createElement","className","mySpan","id","setAttribute","classList","add","appendChild","myKeyBoard","findLetter","score","myhanger","pause","currentTime","volume","play","getElementById","textContent","remove","setTimeout","includes","errorSound","toLocaleLowerCase","img","hangImg","mouse","x","undefined","y","maxRadius","minimumRadius","backgroundSound","canvas","width","innerWidth","height","innerHeight","c","getContext","Circle","dx","dy","radius","o","draw","beginPath","arc","PI","stroke","update","init","circlesArray","strokeStyle","animate","requestAnimationFrame","clearRect"],"mappings":"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","file":"main.0e04fe1a.js","sourceRoot":"..","sourcesContent":["var wordList = [\n  // Borrowed from xkcd password generator which borrowed it from wherever\n  \"ability\",\"able\",\"aboard\",\"about\",\"above\",\"accept\",\"accident\",\"according\",\n  \"account\",\"accurate\",\"acres\",\"across\",\"act\",\"action\",\"active\",\"activity\",\n  \"actual\",\"actually\",\"add\",\"addition\",\"additional\",\"adjective\",\"adult\",\"adventure\",\n  \"advice\",\"affect\",\"afraid\",\"after\",\"afternoon\",\"again\",\"against\",\"age\",\n  \"ago\",\"agree\",\"ahead\",\"aid\",\"air\",\"airplane\",\"alike\",\"alive\",\n  \"all\",\"allow\",\"almost\",\"alone\",\"along\",\"aloud\",\"alphabet\",\"already\",\n  \"also\",\"although\",\"am\",\"among\",\"amount\",\"ancient\",\"angle\",\"angry\",\n  \"animal\",\"announced\",\"another\",\"answer\",\"ants\",\"any\",\"anybody\",\"anyone\",\n  \"anything\",\"anyway\",\"anywhere\",\"apart\",\"apartment\",\"appearance\",\"apple\",\"applied\",\n  \"appropriate\",\"are\",\"area\",\"arm\",\"army\",\"around\",\"arrange\",\"arrangement\",\n  \"arrive\",\"arrow\",\"art\",\"article\",\"as\",\"aside\",\"ask\",\"asleep\",\n  \"at\",\"ate\",\"atmosphere\",\"atom\",\"atomic\",\"attached\",\"attack\",\"attempt\",\n  \"attention\",\"audience\",\"author\",\"automobile\",\"available\",\"average\",\"avoid\",\"aware\",\n  \"away\",\"baby\",\"back\",\"bad\",\"badly\",\"bag\",\"balance\",\"ball\",\n  \"balloon\",\"band\",\"bank\",\"bar\",\"bare\",\"bark\",\"barn\",\"base\",\n  \"baseball\",\"basic\",\"basis\",\"basket\",\"bat\",\"battle\",\"be\",\"bean\",\n  \"bear\",\"beat\",\"beautiful\",\"beauty\",\"became\",\"because\",\"become\",\"becoming\",\n  \"bee\",\"been\",\"before\",\"began\",\"beginning\",\"begun\",\"behavior\",\"behind\",\n  \"being\",\"believed\",\"bell\",\"belong\",\"below\",\"belt\",\"bend\",\"beneath\",\n  \"bent\",\"beside\",\"best\",\"bet\",\"better\",\"between\",\"beyond\",\"bicycle\",\n  \"bigger\",\"biggest\",\"bill\",\"birds\",\"birth\",\"birthday\",\"bit\",\"bite\",\n  \"black\",\"blank\",\"blanket\",\"blew\",\"blind\",\"block\",\"blood\",\"blow\",\n  \"blue\",\"board\",\"boat\",\"body\",\"bone\",\"book\",\"border\",\"born\",\n  \"both\",\"bottle\",\"bottom\",\"bound\",\"bow\",\"bowl\",\"box\",\"boy\",\n  \"brain\",\"branch\",\"brass\",\"brave\",\"bread\",\"break\",\"breakfast\",\"breath\",\n  \"breathe\",\"breathing\",\"breeze\",\"brick\",\"bridge\",\"brief\",\"bright\",\"bring\",\n  \"broad\",\"broke\",\"broken\",\"brother\",\"brought\",\"brown\",\"brush\",\"buffalo\",\n  \"build\",\"building\",\"built\",\"buried\",\"burn\",\"burst\",\"bus\",\"bush\",\n  \"business\",\"busy\",\"but\",\"butter\",\"buy\",\"by\",\"cabin\",\"cage\",\n  \"cake\",\"call\",\"calm\",\"came\",\"camera\",\"camp\",\"can\",\"canal\",\n  \"cannot\",\"cap\",\"capital\",\"captain\",\"captured\",\"car\",\"carbon\",\"card\",\n  \"care\",\"careful\",\"carefully\",\"carried\",\"carry\",\"case\",\"cast\",\"castle\",\n  \"cat\",\"catch\",\"cattle\",\"caught\",\"cause\",\"cave\",\"cell\",\"cent\",\n  \"center\",\"central\",\"century\",\"certain\",\"certainly\",\"chain\",\"chair\",\"chamber\",\n  \"chance\",\"change\",\"changing\",\"chapter\",\"character\",\"characteristic\",\"charge\",\"chart\",\n  \"check\",\"cheese\",\"chemical\",\"chest\",\"chicken\",\"chief\",\"child\",\"children\",\n  \"choice\",\"choose\",\"chose\",\"chosen\",\"church\",\"circle\",\"circus\",\"citizen\",\n  \"city\",\"class\",\"classroom\",\"claws\",\"clay\",\"clean\",\"clear\",\"clearly\",\n  \"climate\",\"climb\",\"clock\",\"close\",\"closely\",\"closer\",\"cloth\",\"clothes\",\n  \"clothing\",\"cloud\",\"club\",\"coach\",\"coal\",\"coast\",\"coat\",\"coffee\",\n  \"cold\",\"collect\",\"college\",\"colony\",\"color\",\"column\",\"combination\",\"combine\",\n  \"come\",\"comfortable\",\"coming\",\"command\",\"common\",\"community\",\"company\",\"compare\",\n  \"compass\",\"complete\",\"completely\",\"complex\",\"composed\",\"composition\",\"compound\",\"concerned\",\n  \"condition\",\"congress\",\"connected\",\"consider\",\"consist\",\"consonant\",\"constantly\",\"construction\",\n  \"contain\",\"continent\",\"continued\",\"contrast\",\"control\",\"conversation\",\"cook\",\"cookies\",\n  \"cool\",\"copper\",\"copy\",\"corn\",\"corner\",\"correct\",\"correctly\",\"cost\",\n  \"cotton\",\"could\",\"count\",\"country\",\"couple\",\"courage\",\"course\",\"court\",\n  \"cover\",\"cow\",\"cowboy\",\"crack\",\"cream\",\"create\",\"creature\",\"crew\",\n  \"crop\",\"cross\",\"crowd\",\"cry\",\"cup\",\"curious\",\"current\",\"curve\",\n  \"customs\",\"cut\",\"cutting\",\"daily\",\"damage\",\"dance\",\"danger\",\"dangerous\",\n  \"dark\",\"darkness\",\"date\",\"daughter\",\"dawn\",\"day\",\"dead\",\"deal\",\n  \"dear\",\"death\",\"decide\",\"declared\",\"deep\",\"deeply\",\"deer\",\"definition\",\n  \"degree\",\"depend\",\"depth\",\"describe\",\"desert\",\"design\",\"desk\",\"detail\",\n  \"determine\",\"develop\",\"development\",\"diagram\",\"diameter\",\"did\",\"die\",\"differ\",\n  \"difference\",\"different\",\"difficult\",\"difficulty\",\"dig\",\"dinner\",\"direct\",\"direction\",\n  \"directly\",\"dirt\",\"dirty\",\"disappear\",\"discover\",\"discovery\",\"discuss\",\"discussion\",\n  \"disease\",\"dish\",\"distance\",\"distant\",\"divide\",\"division\",\"do\",\"doctor\",\n  \"does\",\"dog\",\"doing\",\"doll\",\"dollar\",\"done\",\"donkey\",\"door\",\n  \"dot\",\"double\",\"doubt\",\"down\",\"dozen\",\"draw\",\"drawn\",\"dream\",\n  \"dress\",\"drew\",\"dried\",\"drink\",\"drive\",\"driven\",\"driver\",\"driving\",\n  \"drop\",\"dropped\",\"drove\",\"dry\",\"duck\",\"due\",\"dug\",\"dull\",\n  \"during\",\"dust\",\"duty\",\"each\",\"eager\",\"ear\",\"earlier\",\"early\",\n  \"earn\",\"earth\",\"easier\",\"easily\",\"east\",\"easy\",\"eat\",\"eaten\",\n  \"edge\",\"education\",\"effect\",\"effort\",\"egg\",\"eight\",\"either\",\"electric\",\n  \"electricity\",\"element\",\"elephant\",\"eleven\",\"else\",\"empty\",\"end\",\"enemy\",\n  \"energy\",\"engine\",\"engineer\",\"enjoy\",\"enough\",\"enter\",\"entire\",\"entirely\",\n  \"environment\",\"equal\",\"equally\",\"equator\",\"equipment\",\"escape\",\"especially\",\"essential\",\n  \"establish\",\"even\",\"evening\",\"event\",\"eventually\",\"ever\",\"every\",\"everybody\",\n  \"everyone\",\"everything\",\"everywhere\",\"evidence\",\"exact\",\"exactly\",\"examine\",\"example\",\n  \"excellent\",\"except\",\"exchange\",\"excited\",\"excitement\",\"exciting\",\"exclaimed\",\"exercise\",\n  \"exist\",\"expect\",\"experience\",\"experiment\",\"explain\",\"explanation\",\"explore\",\"express\",\n  \"expression\",\"extra\",\"eye\",\"face\",\"facing\",\"fact\",\"factor\",\"factory\",\n  \"failed\",\"fair\",\"fairly\",\"fall\",\"fallen\",\"familiar\",\"family\",\"famous\",\n  \"far\",\"farm\",\"farmer\",\"farther\",\"fast\",\"fastened\",\"faster\",\"fat\",\n  \"father\",\"favorite\",\"fear\",\"feathers\",\"feature\",\"fed\",\"feed\",\"feel\",\n  \"feet\",\"fell\",\"fellow\",\"felt\",\"fence\",\"few\",\"fewer\",\"field\",\n  \"fierce\",\"fifteen\",\"fifth\",\"fifty\",\"fight\",\"fighting\",\"figure\",\"fill\",\n  \"film\",\"final\",\"finally\",\"find\",\"fine\",\"finest\",\"finger\",\"finish\",\n  \"fire\",\"fireplace\",\"firm\",\"first\",\"fish\",\"five\",\"fix\",\"flag\",\n  \"flame\",\"flat\",\"flew\",\"flies\",\"flight\",\"floating\",\"floor\",\"flow\",\n  \"flower\",\"fly\",\"fog\",\"folks\",\"follow\",\"food\",\"foot\",\"football\",\n  \"for\",\"force\",\"foreign\",\"forest\",\"forget\",\"forgot\",\"forgotten\",\"form\",\n  \"former\",\"fort\",\"forth\",\"forty\",\"forward\",\"fought\",\"found\",\"four\",\n  \"fourth\",\"fox\",\"frame\",\"free\",\"freedom\",\"frequently\",\"fresh\",\"friend\",\n  \"friendly\",\"frighten\",\"frog\",\"from\",\"front\",\"frozen\",\"fruit\",\"fuel\",\n  \"full\",\"fully\",\"fun\",\"function\",\"funny\",\"fur\",\"furniture\",\"further\",\n  \"future\",\"gain\",\"game\",\"garage\",\"garden\",\"gas\",\"gasoline\",\"gate\",\n  \"gather\",\"gave\",\"general\",\"generally\",\"gentle\",\"gently\",\"get\",\"getting\",\n  \"giant\",\"gift\",\"girl\",\"give\",\"given\",\"giving\",\"glad\",\"glass\",\n  \"globe\",\"go\",\"goes\",\"gold\",\"golden\",\"gone\",\"good\",\"goose\",\n  \"got\",\"government\",\"grabbed\",\"grade\",\"gradually\",\"grain\",\"grandfather\",\"grandmother\",\n  \"graph\",\"grass\",\"gravity\",\"gray\",\"great\",\"greater\",\"greatest\",\"greatly\",\n  \"green\",\"grew\",\"ground\",\"group\",\"grow\",\"grown\",\"growth\",\"guard\",\n  \"guess\",\"guide\",\"gulf\",\"gun\",\"habit\",\"had\",\"hair\",\"half\",\n  \"halfway\",\"hall\",\"hand\",\"handle\",\"handsome\",\"hang\",\"happen\",\"happened\",\n  \"happily\",\"happy\",\"harbor\",\"hard\",\"harder\",\"hardly\",\"has\",\"hat\",\n  \"have\",\"having\",\"hay\",\"he\",\"headed\",\"heading\",\"health\",\"heard\",\n  \"hearing\",\"heart\",\"heat\",\"heavy\",\"height\",\"held\",\"hello\",\"help\",\n  \"helpful\",\"her\",\"herd\",\"here\",\"herself\",\"hidden\",\"hide\",\"high\",\n  \"higher\",\"highest\",\"highway\",\"hill\",\"him\",\"himself\",\"his\",\"history\",\n  \"hit\",\"hold\",\"hole\",\"hollow\",\"home\",\"honor\",\"hope\",\"horn\",\n  \"horse\",\"hospital\",\"hot\",\"hour\",\"house\",\"how\",\"however\",\"huge\",\n  \"human\",\"hundred\",\"hung\",\"hungry\",\"hunt\",\"hunter\",\"hurried\",\"hurry\",\n  \"hurt\",\"husband\",\"ice\",\"idea\",\"identity\",\"if\",\"ill\",\"image\",\n  \"imagine\",\"immediately\",\"importance\",\"important\",\"impossible\",\"improve\",\"in\",\"inch\",\n  \"include\",\"including\",\"income\",\"increase\",\"indeed\",\"independent\",\"indicate\",\"individual\",\n  \"industrial\",\"industry\",\"influence\",\"information\",\"inside\",\"instance\",\"instant\",\"instead\",\n  \"instrument\",\"interest\",\"interior\",\"into\",\"introduced\",\"invented\",\"involved\",\"iron\",\n  \"is\",\"island\",\"it\",\"its\",\"itself\",\"jack\",\"jar\",\"jet\",\n  \"job\",\"join\",\"joined\",\"journey\",\"joy\",\"judge\",\"jump\",\"jungle\",\n  \"just\",\"keep\",\"kept\",\"key\",\"kids\",\"kill\",\"kind\",\"kitchen\",\n  \"knew\",\"knife\",\"know\",\"knowledge\",\"known\",\"label\",\"labor\",\"lack\",\n  \"lady\",\"laid\",\"lake\",\"lamp\",\"land\",\"language\",\"large\",\"larger\",\n  \"largest\",\"last\",\"late\",\"later\",\"laugh\",\"law\",\"lay\",\"layers\",\n  \"lead\",\"leader\",\"leaf\",\"learn\",\"least\",\"leather\",\"leave\",\"leaving\",\n  \"led\",\"left\",\"leg\",\"length\",\"lesson\",\"let\",\"letter\",\"level\",\n  \"library\",\"lie\",\"life\",\"lift\",\"light\",\"like\",\"likely\",\"limited\",\n  \"line\",\"lion\",\"lips\",\"liquid\",\"list\",\"listen\",\"little\",\"live\",\n  \"living\",\"load\",\"local\",\"locate\",\"location\",\"log\",\"lonely\",\"long\",\n  \"longer\",\"look\",\"loose\",\"lose\",\"loss\",\"lost\",\"lot\",\"loud\",\n  \"love\",\"lovely\",\"low\",\"lower\",\"luck\",\"lucky\",\"lunch\",\"lungs\",\n  \"lying\",\"machine\",\"machinery\",\"mad\",\"made\",\"magic\",\"magnet\",\"mail\",\n  \"main\",\"mainly\",\"major\",\"make\",\"making\",\"man\",\"managed\",\"manner\",\n  \"manufacturing\",\"many\",\"map\",\"mark\",\"market\",\"married\",\"mass\",\"massage\",\n  \"master\",\"material\",\"mathematics\",\"matter\",\"may\",\"maybe\",\"me\",\"meal\",\n  \"mean\",\"means\",\"meant\",\"measure\",\"meat\",\"medicine\",\"meet\",\"melted\",\n  \"member\",\"memory\",\"men\",\"mental\",\"merely\",\"met\",\"metal\",\"method\",\n  \"mice\",\"middle\",\"might\",\"mighty\",\"mile\",\"military\",\"milk\",\"mill\",\n  \"mind\",\"mine\",\"minerals\",\"minute\",\"mirror\",\"missing\",\"mission\",\"mistake\",\n  \"mix\",\"mixture\",\"model\",\"modern\",\"molecular\",\"moment\",\"money\",\"monkey\",\n  \"month\",\"mood\",\"moon\",\"more\",\"morning\",\"most\",\"mostly\",\"mother\",\n  \"motion\",\"motor\",\"mountain\",\"mouse\",\"mouth\",\"move\",\"movement\",\"movie\",\n  \"moving\",\"mud\",\"muscle\",\"music\",\"musical\",\"must\",\"my\",\"myself\",\n  \"mysterious\",\"nails\",\"name\",\"nation\",\"national\",\"native\",\"natural\",\"naturally\",\n  \"nature\",\"near\",\"nearby\",\"nearer\",\"nearest\",\"nearly\",\"necessary\",\"neck\",\n  \"needed\",\"needle\",\"needs\",\"negative\",\"neighbor\",\"neighborhood\",\"nervous\",\"nest\",\n  \"never\",\"new\",\"news\",\"newspaper\",\"next\",\"nice\",\"night\",\"nine\",\n  \"no\",\"nobody\",\"nodded\",\"noise\",\"none\",\"noon\",\"nor\",\"north\",\n  \"nose\",\"not\",\"note\",\"noted\",\"nothing\",\"notice\",\"noun\",\"now\",\n  \"number\",\"numeral\",\"nuts\",\"object\",\"observe\",\"obtain\",\"occasionally\",\"occur\",\n  \"ocean\",\"of\",\"off\",\"offer\",\"office\",\"officer\",\"official\",\"oil\",\n  \"old\",\"older\",\"oldest\",\"on\",\"once\",\"one\",\"only\",\"onto\",\n  \"open\",\"operation\",\"opinion\",\"opportunity\",\"opposite\",\"or\",\"orange\",\"orbit\",\n  \"order\",\"ordinary\",\"organization\",\"organized\",\"origin\",\"original\",\"other\",\"ought\",\n  \"our\",\"ourselves\",\"out\",\"outer\",\"outline\",\"outside\",\"over\",\"own\",\n  \"owner\",\"oxygen\",\"pack\",\"package\",\"page\",\"paid\",\"pain\",\"paint\",\n  \"pair\",\"palace\",\"pale\",\"pan\",\"paper\",\"paragraph\",\"parallel\",\"parent\",\n  \"park\",\"part\",\"particles\",\"particular\",\"particularly\",\"partly\",\"parts\",\"party\",\n  \"pass\",\"passage\",\"past\",\"path\",\"pattern\",\"pay\",\"peace\",\"pen\",\n  \"pencil\",\"people\",\"per\",\"percent\",\"perfect\",\"perfectly\",\"perhaps\",\"period\",\n  \"person\",\"personal\",\"pet\",\"phrase\",\"physical\",\"piano\",\"pick\",\"picture\",\n  \"pictured\",\"pie\",\"piece\",\"pig\",\"pile\",\"pilot\",\"pine\",\"pink\",\n  \"pipe\",\"pitch\",\"place\",\"plain\",\"plan\",\"plane\",\"planet\",\"planned\",\n  \"planning\",\"plant\",\"plastic\",\"plate\",\"plates\",\"play\",\"pleasant\",\"please\",\n  \"pleasure\",\"plenty\",\"plural\",\"plus\",\"pocket\",\"poem\",\"poet\",\"poetry\",\n  \"point\",\"pole\",\"police\",\"policeman\",\"political\",\"pond\",\"pony\",\"pool\",\n  \"poor\",\"popular\",\"population\",\"porch\",\"port\",\"position\",\"positive\",\"possible\",\n  \"possibly\",\"post\",\"pot\",\"potatoes\",\"pound\",\"pour\",\"powder\",\"power\",\n  \"powerful\",\"practical\",\"practice\",\"prepare\",\"present\",\"president\",\"press\",\"pressure\",\n  \"pretty\",\"prevent\",\"previous\",\"price\",\"pride\",\"primitive\",\"principal\",\"principle\",\n  \"printed\",\"private\",\"prize\",\"probably\",\"problem\",\"process\",\"produce\",\"product\",\n  \"production\",\"program\",\"progress\",\"promised\",\"proper\",\"properly\",\"property\",\"protection\",\n  \"proud\",\"prove\",\"provide\",\"public\",\"pull\",\"pupil\",\"pure\",\"purple\",\n  \"purpose\",\"push\",\"put\",\"putting\",\"quarter\",\"queen\",\"question\",\"quick\",\n  \"quickly\",\"quiet\",\"quietly\",\"quite\",\"rabbit\",\"race\",\"radio\",\"railroad\",\n  \"rain\",\"raise\",\"ran\",\"ranch\",\"range\",\"rapidly\",\"rate\",\"rather\",\n  \"raw\",\"rays\",\"reach\",\"read\",\"reader\",\"ready\",\"real\",\"realize\",\n  \"rear\",\"reason\",\"recall\",\"receive\",\"recent\",\"recently\",\"recognize\",\"record\",\n  \"red\",\"refer\",\"refused\",\"region\",\"regular\",\"related\",\"relationship\",\"religious\",\n  \"remain\",\"remarkable\",\"remember\",\"remove\",\"repeat\",\"replace\",\"replied\",\"report\",\n  \"represent\",\"require\",\"research\",\"respect\",\"rest\",\"result\",\"return\",\"review\",\n  \"rhyme\",\"rhythm\",\"rice\",\"rich\",\"ride\",\"riding\",\"right\",\"ring\",\n  \"rise\",\"rising\",\"river\",\"road\",\"roar\",\"rock\",\"rocket\",\"rocky\",\n  \"rod\",\"roll\",\"roof\",\"room\",\"root\",\"rope\",\"rose\",\"rough\",\n  \"round\",\"route\",\"row\",\"rubbed\",\"rubber\",\"rule\",\"ruler\",\"run\",\n  \"running\",\"rush\",\"sad\",\"saddle\",\"safe\",\"safety\",\"said\",\"sail\",\n  \"sale\",\"salmon\",\"salt\",\"same\",\"sand\",\"sang\",\"sat\",\"satellites\",\n  \"satisfied\",\"save\",\"saved\",\"saw\",\"say\",\"scale\",\"scared\",\"scene\",\n  \"school\",\"science\",\"scientific\",\"scientist\",\"score\",\"screen\",\"sea\",\"search\",\n  \"season\",\"seat\",\"second\",\"secret\",\"section\",\"see\",\"seed\",\"seeing\",\n  \"seems\",\"seen\",\"seldom\",\"select\",\"selection\",\"sell\",\"send\",\"sense\",\n  \"sent\",\"sentence\",\"separate\",\"series\",\"serious\",\"serve\",\"service\",\"sets\",\n  \"setting\",\"settle\",\"settlers\",\"seven\",\"several\",\"shade\",\"shadow\",\"shake\",\n  \"shaking\",\"shall\",\"shallow\",\"shape\",\"share\",\"sharp\",\"she\",\"sheep\",\n  \"sheet\",\"shelf\",\"shells\",\"shelter\",\"shine\",\"shinning\",\"ship\",\"shirt\",\n  \"shoe\",\"shoot\",\"shop\",\"shore\",\"short\",\"shorter\",\"shot\",\"should\",\n  \"shoulder\",\"shout\",\"show\",\"shown\",\"shut\",\"sick\",\"sides\",\"sight\",\n  \"sign\",\"signal\",\"silence\",\"silent\",\"silk\",\"silly\",\"silver\",\"similar\",\n  \"simple\",\"simplest\",\"simply\",\"since\",\"sing\",\"single\",\"sink\",\"sister\",\n  \"sit\",\"sitting\",\"situation\",\"six\",\"size\",\"skill\",\"skin\",\"sky\",\n  \"slabs\",\"slave\",\"sleep\",\"slept\",\"slide\",\"slight\",\"slightly\",\"slip\",\n  \"slipped\",\"slope\",\"slow\",\"slowly\",\"small\",\"smaller\",\"smallest\",\"smell\",\n  \"smile\",\"smoke\",\"smooth\",\"snake\",\"snow\",\"so\",\"soap\",\"social\",\n  \"society\",\"soft\",\"softly\",\"soil\",\"solar\",\"sold\",\"soldier\",\"solid\",\n  \"solution\",\"solve\",\"some\",\"somebody\",\"somehow\",\"someone\",\"something\",\"sometime\",\n  \"somewhere\",\"son\",\"song\",\"soon\",\"sort\",\"sound\",\"source\",\"south\",\n  \"southern\",\"space\",\"speak\",\"special\",\"species\",\"specific\",\"speech\",\"speed\",\n  \"spell\",\"spend\",\"spent\",\"spider\",\"spin\",\"spirit\",\"spite\",\"split\",\n  \"spoken\",\"sport\",\"spread\",\"spring\",\"square\",\"stage\",\"stairs\",\"stand\",\n  \"standard\",\"star\",\"stared\",\"start\",\"state\",\"statement\",\"station\",\"stay\",\n  \"steady\",\"steam\",\"steel\",\"steep\",\"stems\",\"step\",\"stepped\",\"stick\",\n  \"stiff\",\"still\",\"stock\",\"stomach\",\"stone\",\"stood\",\"stop\",\"stopped\",\n  \"store\",\"storm\",\"story\",\"stove\",\"straight\",\"strange\",\"stranger\",\"straw\",\n  \"stream\",\"street\",\"strength\",\"stretch\",\"strike\",\"string\",\"strip\",\"strong\",\n  \"stronger\",\"struck\",\"structure\",\"struggle\",\"stuck\",\"student\",\"studied\",\"studying\",\n  \"subject\",\"substance\",\"success\",\"successful\",\"such\",\"sudden\",\"suddenly\",\"sugar\",\n  \"suggest\",\"suit\",\"sum\",\"summer\",\"sun\",\"sunlight\",\"supper\",\"supply\",\n  \"support\",\"suppose\",\"sure\",\"surface\",\"surprise\",\"surrounded\",\"swam\",\"sweet\",\n  \"swept\",\"swim\",\"swimming\",\"swing\",\"swung\",\"syllable\",\"symbol\",\"system\",\n  \"table\",\"tail\",\"take\",\"taken\",\"tales\",\"talk\",\"tall\",\"tank\",\n  \"tape\",\"task\",\"taste\",\"taught\",\"tax\",\"tea\",\"teach\",\"teacher\",\n  \"team\",\"tears\",\"teeth\",\"telephone\",\"television\",\"tell\",\"temperature\",\"ten\",\n  \"tent\",\"term\",\"terrible\",\"test\",\"than\",\"thank\",\"that\",\"thee\",\n  \"them\",\"themselves\",\"then\",\"theory\",\"there\",\"therefore\",\"these\",\"they\",\n  \"thick\",\"thin\",\"thing\",\"think\",\"third\",\"thirty\",\"this\",\"those\",\n  \"thou\",\"though\",\"thought\",\"thousand\",\"thread\",\"three\",\"threw\",\"throat\",\n  \"through\",\"throughout\",\"throw\",\"thrown\",\"thumb\",\"thus\",\"thy\",\"tide\",\n  \"tie\",\"tight\",\"tightly\",\"till\",\"time\",\"tin\",\"tiny\",\"tip\",\n  \"tired\",\"title\",\"to\",\"tobacco\",\"today\",\"together\",\"told\",\"tomorrow\",\n  \"tone\",\"tongue\",\"tonight\",\"too\",\"took\",\"tool\",\"top\",\"topic\",\n  \"torn\",\"total\",\"touch\",\"toward\",\"tower\",\"town\",\"toy\",\"trace\",\n  \"track\",\"trade\",\"traffic\",\"trail\",\"train\",\"transportation\",\"trap\",\"travel\",\n  \"treated\",\"tree\",\"triangle\",\"tribe\",\"trick\",\"tried\",\"trip\",\"troops\",\n  \"tropical\",\"trouble\",\"truck\",\"trunk\",\"truth\",\"try\",\"tube\",\"tune\",\n  \"turn\",\"twelve\",\"twenty\",\"twice\",\"two\",\"type\",\"typical\",\"uncle\",\n  \"under\",\"underline\",\"understanding\",\"unhappy\",\"union\",\"unit\",\"universe\",\"unknown\",\n  \"unless\",\"until\",\"unusual\",\"up\",\"upon\",\"upper\",\"upward\",\"us\",\n  \"use\",\"useful\",\"using\",\"usual\",\"usually\",\"valley\",\"valuable\",\"value\",\n  \"vapor\",\"variety\",\"various\",\"vast\",\"vegetable\",\"verb\",\"vertical\",\"very\",\n  \"vessels\",\"victory\",\"view\",\"village\",\"visit\",\"visitor\",\"voice\",\"volume\",\n  \"vote\",\"vowel\",\"voyage\",\"wagon\",\"wait\",\"walk\",\"wall\",\"want\",\n  \"war\",\"warm\",\"warn\",\"was\",\"wash\",\"waste\",\"watch\",\"water\",\n  \"wave\",\"way\",\"we\",\"weak\",\"wealth\",\"wear\",\"weather\",\"week\",\n  \"weigh\",\"weight\",\"welcome\",\"well\",\"went\",\"were\",\"west\",\"western\",\n  \"wet\",\"whale\",\"what\",\"whatever\",\"wheat\",\"wheel\",\"when\",\"whenever\",\n  \"where\",\"wherever\",\"whether\",\"which\",\"while\",\"whispered\",\"whistle\",\"white\",\n  \"who\",\"whole\",\"whom\",\"whose\",\"why\",\"wide\",\"widely\",\"wife\",\n  \"wild\",\"will\",\"willing\",\"win\",\"wind\",\"window\",\"wing\",\"winter\",\n  \"wire\",\"wise\",\"wish\",\"with\",\"within\",\"without\",\"wolf\",\"women\",\n  \"won\",\"wonder\",\"wonderful\",\"wood\",\"wooden\",\"wool\",\"word\",\"wore\",\n  \"work\",\"worker\",\"world\",\"worried\",\"worry\",\"worse\",\"worth\",\"would\",\n  \"wrapped\",\"write\",\"writer\",\"writing\",\"written\",\"wrong\",\"wrote\",\"yard\",\n  \"year\",\"yellow\",\"yes\",\"yesterday\",\"yet\",\"you\",\"young\",\"younger\",\n  \"your\",\"yourself\",\"youth\",\"zero\",\"zebra\",\"zipper\",\"zoo\",\"zulu\"\n];\n\nfunction words(options) {\n\n  function word() {\n    if (options && options.maxLength > 1) {\n      return generateWordWithMaxLength();\n    } else {\n      return generateRandomWord();\n    }\n  }\n\n  function generateWordWithMaxLength() {\n    let rightSize = false;\n    let wordUsed;\n    while (!rightSize) {  \n      wordUsed = generateRandomWord();\n      if(wordUsed.length <= options.maxLength) {\n        rightSize = true;\n      }\n\n    }\n    return wordUsed;\n  }\n\n  function generateRandomWord() {\n    return wordList[randInt(wordList.length)];\n  }\n\n  function randInt(lessThan) {\n    return Math.floor(Math.random() * lessThan);\n  }\n\n  // No arguments = generate one word\n  if (typeof(options) === 'undefined') {\n    return word();\n  }\n\n  // Just a number = return that many words\n  if (typeof(options) === 'number') {\n    options = { exactly: options };\n  }\n\n  // options supported: exactly, min, max, join\n  if (options.exactly) {\n    options.min = options.exactly;\n    options.max = options.exactly;\n  }\n  \n  // not a number = one word par string\n  if (typeof(options.wordsPerString) !== 'number') {\n    options.wordsPerString = 1;\n  }\n\n  //not a function = returns the raw word\n  if (typeof(options.formatter) !== 'function') {\n    options.formatter = (word) => word;\n  }\n\n  //not a string = separator is a space\n  if (typeof(options.separator) !== 'string') {\n    options.separator = ' ';\n  }\n\n  var total = options.min + randInt(options.max + 1 - options.min);\n  var results = [];\n  var token = '';\n  var relativeIndex = 0;\n\n  for (var i = 0; (i < total * options.wordsPerString); i++) {\n    if (relativeIndex === options.wordsPerString - 1) {\n      token += options.formatter(word(), relativeIndex);\n    }\n    else {\n      token += options.formatter(word(), relativeIndex) + options.separator;\n    }\n    relativeIndex++;\n    if ((i + 1) % options.wordsPerString === 0) {\n      results.push(token);\n      token = ''; \n      relativeIndex = 0;\n    }\n   \n  }\n  if (options.join) {\n    results = results.join(options.join);\n  }\n\n  return results;\n}\n\nmodule.exports = words;\n// Export the word list as it is often useful\nwords.wordList = wordList;","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.swal=e():t.swal=e()}(this,function(){return function(t){function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};return e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:o})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,\"a\",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"\",e(e.s=8)}([function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=\"swal-button\";e.CLASS_NAMES={MODAL:\"swal-modal\",OVERLAY:\"swal-overlay\",SHOW_MODAL:\"swal-overlay--show-modal\",MODAL_TITLE:\"swal-title\",MODAL_TEXT:\"swal-text\",ICON:\"swal-icon\",ICON_CUSTOM:\"swal-icon--custom\",CONTENT:\"swal-content\",FOOTER:\"swal-footer\",BUTTON_CONTAINER:\"swal-button-container\",BUTTON:o,CONFIRM_BUTTON:o+\"--confirm\",CANCEL_BUTTON:o+\"--cancel\",DANGER_BUTTON:o+\"--danger\",BUTTON_LOADING:o+\"--loading\",BUTTON_LOADER:o+\"__loader\"},e.default=e.CLASS_NAMES},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.getNode=function(t){var e=\".\"+t;return document.querySelector(e)},e.stringToNode=function(t){var e=document.createElement(\"div\");return e.innerHTML=t.trim(),e.firstChild},e.insertAfter=function(t,e){var n=e.nextSibling;e.parentNode.insertBefore(t,n)},e.removeNode=function(t){t.parentElement.removeChild(t)},e.throwErr=function(t){throw t=t.replace(/ +(?= )/g,\"\"),\"SweetAlert: \"+(t=t.trim())},e.isPlainObject=function(t){if(\"[object Object]\"!==Object.prototype.toString.call(t))return!1;var e=Object.getPrototypeOf(t);return null===e||e===Object.prototype},e.ordinalSuffixOf=function(t){var e=t%10,n=t%100;return 1===e&&11!==n?t+\"st\":2===e&&12!==n?t+\"nd\":3===e&&13!==n?t+\"rd\":t+\"th\"}},function(t,e,n){\"use strict\";function o(t){for(var n in t)e.hasOwnProperty(n)||(e[n]=t[n])}Object.defineProperty(e,\"__esModule\",{value:!0}),o(n(25));var r=n(26);e.overlayMarkup=r.default,o(n(27)),o(n(28)),o(n(29));var i=n(0),a=i.default.MODAL_TITLE,s=i.default.MODAL_TEXT,c=i.default.ICON,l=i.default.FOOTER;e.iconMarkup='\\n  <div class=\"'+c+'\"></div>',e.titleMarkup='\\n  <div class=\"'+a+'\"></div>\\n',e.textMarkup='\\n  <div class=\"'+s+'\"></div>',e.footerMarkup='\\n  <div class=\"'+l+'\"></div>\\n'},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(1);e.CONFIRM_KEY=\"confirm\",e.CANCEL_KEY=\"cancel\";var r={visible:!0,text:null,value:null,className:\"\",closeModal:!0},i=Object.assign({},r,{visible:!1,text:\"Cancel\",value:null}),a=Object.assign({},r,{text:\"OK\",value:!0});e.defaultButtonList={cancel:i,confirm:a};var s=function(t){switch(t){case e.CONFIRM_KEY:return a;case e.CANCEL_KEY:return i;default:var n=t.charAt(0).toUpperCase()+t.slice(1);return Object.assign({},r,{text:n,value:t})}},c=function(t,e){var n=s(t);return!0===e?Object.assign({},n,{visible:!0}):\"string\"==typeof e?Object.assign({},n,{visible:!0,text:e}):o.isPlainObject(e)?Object.assign({visible:!0},n,e):Object.assign({},n,{visible:!1})},l=function(t){for(var e={},n=0,o=Object.keys(t);n<o.length;n++){var r=o[n],a=t[r],s=c(r,a);e[r]=s}return e.cancel||(e.cancel=i),e},u=function(t){var n={};switch(t.length){case 1:n[e.CANCEL_KEY]=Object.assign({},i,{visible:!1});break;case 2:n[e.CANCEL_KEY]=c(e.CANCEL_KEY,t[0]),n[e.CONFIRM_KEY]=c(e.CONFIRM_KEY,t[1]);break;default:o.throwErr(\"Invalid number of 'buttons' in array (\"+t.length+\").\\n      If you want more than 2 buttons, you need to use an object!\")}return n};e.getButtonListOpts=function(t){var n=e.defaultButtonList;return\"string\"==typeof t?n[e.CONFIRM_KEY]=c(e.CONFIRM_KEY,t):Array.isArray(t)?n=u(t):o.isPlainObject(t)?n=l(t):!0===t?n=u([!0,!0]):!1===t?n=u([!1,!1]):void 0===t&&(n=e.defaultButtonList),n}},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(1),r=n(2),i=n(0),a=i.default.MODAL,s=i.default.OVERLAY,c=n(30),l=n(31),u=n(32),f=n(33);e.injectElIntoModal=function(t){var e=o.getNode(a),n=o.stringToNode(t);return e.appendChild(n),n};var d=function(t){t.className=a,t.textContent=\"\"},p=function(t,e){d(t);var n=e.className;n&&t.classList.add(n)};e.initModalContent=function(t){var e=o.getNode(a);p(e,t),c.default(t.icon),l.initTitle(t.title),l.initText(t.text),f.default(t.content),u.default(t.buttons,t.dangerMode)};var m=function(){var t=o.getNode(s),e=o.stringToNode(r.modalMarkup);t.appendChild(e)};e.default=m},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(3),r={isOpen:!1,promise:null,actions:{},timer:null},i=Object.assign({},r);e.resetState=function(){i=Object.assign({},r)},e.setActionValue=function(t){if(\"string\"==typeof t)return a(o.CONFIRM_KEY,t);for(var e in t)a(e,t[e])};var a=function(t,e){i.actions[t]||(i.actions[t]={}),Object.assign(i.actions[t],{value:e})};e.setActionOptionsFor=function(t,e){var n=(void 0===e?{}:e).closeModal,o=void 0===n||n;Object.assign(i.actions[t],{closeModal:o})},e.default=i},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(1),r=n(3),i=n(0),a=i.default.OVERLAY,s=i.default.SHOW_MODAL,c=i.default.BUTTON,l=i.default.BUTTON_LOADING,u=n(5);e.openModal=function(){o.getNode(a).classList.add(s),u.default.isOpen=!0};var f=function(){o.getNode(a).classList.remove(s),u.default.isOpen=!1};e.onAction=function(t){void 0===t&&(t=r.CANCEL_KEY);var e=u.default.actions[t],n=e.value;if(!1===e.closeModal){var i=c+\"--\"+t;o.getNode(i).classList.add(l)}else f();u.default.promise.resolve(n)},e.getState=function(){var t=Object.assign({},u.default);return delete t.promise,delete t.timer,t},e.stopLoading=function(){for(var t=document.querySelectorAll(\".\"+c),e=0;e<t.length;e++){t[e].classList.remove(l)}}},function(t,e){var n;n=function(){return this}();try{n=n||Function(\"return this\")()||(0,eval)(\"this\")}catch(t){\"object\"==typeof window&&(n=window)}t.exports=n},function(t,e,n){(function(e){t.exports=e.sweetAlert=n(9)}).call(e,n(7))},function(t,e,n){(function(e){t.exports=e.swal=n(10)}).call(e,n(7))},function(t,e,n){\"undefined\"!=typeof window&&n(11),n(16);var o=n(23).default;t.exports=o},function(t,e,n){var o=n(12);\"string\"==typeof o&&(o=[[t.i,o,\"\"]]);var r={insertAt:\"top\"};r.transform=void 0;n(14)(o,r);o.locals&&(t.exports=o.locals)},function(t,e,n){e=t.exports=n(13)(void 0),e.push([t.i,'.swal-icon--error{border-color:#f27474;-webkit-animation:animateErrorIcon .5s;animation:animateErrorIcon .5s}.swal-icon--error__x-mark{position:relative;display:block;-webkit-animation:animateXMark .5s;animation:animateXMark .5s}.swal-icon--error__line{position:absolute;height:5px;width:47px;background-color:#f27474;display:block;top:37px;border-radius:2px}.swal-icon--error__line--left{-webkit-transform:rotate(45deg);transform:rotate(45deg);left:17px}.swal-icon--error__line--right{-webkit-transform:rotate(-45deg);transform:rotate(-45deg);right:16px}@-webkit-keyframes animateErrorIcon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}to{-webkit-transform:rotateX(0deg);transform:rotateX(0deg);opacity:1}}@keyframes animateErrorIcon{0%{-webkit-transform:rotateX(100deg);transform:rotateX(100deg);opacity:0}to{-webkit-transform:rotateX(0deg);transform:rotateX(0deg);opacity:1}}@-webkit-keyframes animateXMark{0%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}50%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}80%{-webkit-transform:scale(1.15);transform:scale(1.15);margin-top:-6px}to{-webkit-transform:scale(1);transform:scale(1);margin-top:0;opacity:1}}@keyframes animateXMark{0%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}50%{-webkit-transform:scale(.4);transform:scale(.4);margin-top:26px;opacity:0}80%{-webkit-transform:scale(1.15);transform:scale(1.15);margin-top:-6px}to{-webkit-transform:scale(1);transform:scale(1);margin-top:0;opacity:1}}.swal-icon--warning{border-color:#f8bb86;-webkit-animation:pulseWarning .75s infinite alternate;animation:pulseWarning .75s infinite alternate}.swal-icon--warning__body{width:5px;height:47px;top:10px;border-radius:2px;margin-left:-2px}.swal-icon--warning__body,.swal-icon--warning__dot{position:absolute;left:50%;background-color:#f8bb86}.swal-icon--warning__dot{width:7px;height:7px;border-radius:50%;margin-left:-4px;bottom:-11px}@-webkit-keyframes pulseWarning{0%{border-color:#f8d486}to{border-color:#f8bb86}}@keyframes pulseWarning{0%{border-color:#f8d486}to{border-color:#f8bb86}}.swal-icon--success{border-color:#a5dc86}.swal-icon--success:after,.swal-icon--success:before{content:\"\";border-radius:50%;position:absolute;width:60px;height:120px;background:#fff;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.swal-icon--success:before{border-radius:120px 0 0 120px;top:-7px;left:-33px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:60px 60px;transform-origin:60px 60px}.swal-icon--success:after{border-radius:0 120px 120px 0;top:-11px;left:30px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:0 60px;transform-origin:0 60px;-webkit-animation:rotatePlaceholder 4.25s ease-in;animation:rotatePlaceholder 4.25s ease-in}.swal-icon--success__ring{width:80px;height:80px;border:4px solid hsla(98,55%,69%,.2);border-radius:50%;box-sizing:content-box;position:absolute;left:-4px;top:-4px;z-index:2}.swal-icon--success__hide-corners{width:5px;height:90px;background-color:#fff;padding:1px;position:absolute;left:28px;top:8px;z-index:1;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.swal-icon--success__line{height:5px;background-color:#a5dc86;display:block;border-radius:2px;position:absolute;z-index:2}.swal-icon--success__line--tip{width:25px;left:14px;top:46px;-webkit-transform:rotate(45deg);transform:rotate(45deg);-webkit-animation:animateSuccessTip .75s;animation:animateSuccessTip .75s}.swal-icon--success__line--long{width:47px;right:8px;top:38px;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-animation:animateSuccessLong .75s;animation:animateSuccessLong .75s}@-webkit-keyframes rotatePlaceholder{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}to{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@keyframes rotatePlaceholder{0%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}5%{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}12%{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}to{-webkit-transform:rotate(-405deg);transform:rotate(-405deg)}}@-webkit-keyframes animateSuccessTip{0%{width:0;left:1px;top:19px}54%{width:0;left:1px;top:19px}70%{width:50px;left:-8px;top:37px}84%{width:17px;left:21px;top:48px}to{width:25px;left:14px;top:45px}}@keyframes animateSuccessTip{0%{width:0;left:1px;top:19px}54%{width:0;left:1px;top:19px}70%{width:50px;left:-8px;top:37px}84%{width:17px;left:21px;top:48px}to{width:25px;left:14px;top:45px}}@-webkit-keyframes animateSuccessLong{0%{width:0;right:46px;top:54px}65%{width:0;right:46px;top:54px}84%{width:55px;right:0;top:35px}to{width:47px;right:8px;top:38px}}@keyframes animateSuccessLong{0%{width:0;right:46px;top:54px}65%{width:0;right:46px;top:54px}84%{width:55px;right:0;top:35px}to{width:47px;right:8px;top:38px}}.swal-icon--info{border-color:#c9dae1}.swal-icon--info:before{width:5px;height:29px;bottom:17px;border-radius:2px;margin-left:-2px}.swal-icon--info:after,.swal-icon--info:before{content:\"\";position:absolute;left:50%;background-color:#c9dae1}.swal-icon--info:after{width:7px;height:7px;border-radius:50%;margin-left:-3px;top:19px}.swal-icon{width:80px;height:80px;border-width:4px;border-style:solid;border-radius:50%;padding:0;position:relative;box-sizing:content-box;margin:20px auto}.swal-icon:first-child{margin-top:32px}.swal-icon--custom{width:auto;height:auto;max-width:100%;border:none;border-radius:0}.swal-icon img{max-width:100%;max-height:100%}.swal-title{color:rgba(0,0,0,.65);font-weight:600;text-transform:none;position:relative;display:block;padding:13px 16px;font-size:27px;line-height:normal;text-align:center;margin-bottom:0}.swal-title:first-child{margin-top:26px}.swal-title:not(:first-child){padding-bottom:0}.swal-title:not(:last-child){margin-bottom:13px}.swal-text{font-size:16px;position:relative;float:none;line-height:normal;vertical-align:top;text-align:left;display:inline-block;margin:0;padding:0 10px;font-weight:400;color:rgba(0,0,0,.64);max-width:calc(100% - 20px);overflow-wrap:break-word;box-sizing:border-box}.swal-text:first-child{margin-top:45px}.swal-text:last-child{margin-bottom:45px}.swal-footer{text-align:right;padding-top:13px;margin-top:13px;padding:13px 16px;border-radius:inherit;border-top-left-radius:0;border-top-right-radius:0}.swal-button-container{margin:5px;display:inline-block;position:relative}.swal-button{background-color:#7cd1f9;color:#fff;border:none;box-shadow:none;border-radius:5px;font-weight:600;font-size:14px;padding:10px 24px;margin:0;cursor:pointer}.swal-button:not([disabled]):hover{background-color:#78cbf2}.swal-button:active{background-color:#70bce0}.swal-button:focus{outline:none;box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(43,114,165,.29)}.swal-button[disabled]{opacity:.5;cursor:default}.swal-button::-moz-focus-inner{border:0}.swal-button--cancel{color:#555;background-color:#efefef}.swal-button--cancel:not([disabled]):hover{background-color:#e8e8e8}.swal-button--cancel:active{background-color:#d7d7d7}.swal-button--cancel:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(116,136,150,.29)}.swal-button--danger{background-color:#e64942}.swal-button--danger:not([disabled]):hover{background-color:#df4740}.swal-button--danger:active{background-color:#cf423b}.swal-button--danger:focus{box-shadow:0 0 0 1px #fff,0 0 0 3px rgba(165,43,43,.29)}.swal-content{padding:0 20px;margin-top:20px;font-size:medium}.swal-content:last-child{margin-bottom:20px}.swal-content__input,.swal-content__textarea{-webkit-appearance:none;background-color:#fff;border:none;font-size:14px;display:block;box-sizing:border-box;width:100%;border:1px solid rgba(0,0,0,.14);padding:10px 13px;border-radius:2px;transition:border-color .2s}.swal-content__input:focus,.swal-content__textarea:focus{outline:none;border-color:#6db8ff}.swal-content__textarea{resize:vertical}.swal-button--loading{color:transparent}.swal-button--loading~.swal-button__loader{opacity:1}.swal-button__loader{position:absolute;height:auto;width:43px;z-index:2;left:50%;top:50%;-webkit-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);text-align:center;pointer-events:none;opacity:0}.swal-button__loader div{display:inline-block;float:none;vertical-align:baseline;width:9px;height:9px;padding:0;border:none;margin:2px;opacity:.4;border-radius:7px;background-color:hsla(0,0%,100%,.9);transition:background .2s;-webkit-animation:swal-loading-anim 1s infinite;animation:swal-loading-anim 1s infinite}.swal-button__loader div:nth-child(3n+2){-webkit-animation-delay:.15s;animation-delay:.15s}.swal-button__loader div:nth-child(3n+3){-webkit-animation-delay:.3s;animation-delay:.3s}@-webkit-keyframes swal-loading-anim{0%{opacity:.4}20%{opacity:.4}50%{opacity:1}to{opacity:.4}}@keyframes swal-loading-anim{0%{opacity:.4}20%{opacity:.4}50%{opacity:1}to{opacity:.4}}.swal-overlay{position:fixed;top:0;bottom:0;left:0;right:0;text-align:center;font-size:0;overflow-y:auto;background-color:rgba(0,0,0,.4);z-index:10000;pointer-events:none;opacity:0;transition:opacity .3s}.swal-overlay:before{content:\" \";display:inline-block;vertical-align:middle;height:100%}.swal-overlay--show-modal{opacity:1;pointer-events:auto}.swal-overlay--show-modal .swal-modal{opacity:1;pointer-events:auto;box-sizing:border-box;-webkit-animation:showSweetAlert .3s;animation:showSweetAlert .3s;will-change:transform}.swal-modal{width:478px;opacity:0;pointer-events:none;background-color:#fff;text-align:center;border-radius:5px;position:static;margin:20px auto;display:inline-block;vertical-align:middle;-webkit-transform:scale(1);transform:scale(1);-webkit-transform-origin:50% 50%;transform-origin:50% 50%;z-index:10001;transition:opacity .2s,-webkit-transform .3s;transition:transform .3s,opacity .2s;transition:transform .3s,opacity .2s,-webkit-transform .3s}@media (max-width:500px){.swal-modal{width:calc(100% - 20px)}}@-webkit-keyframes showSweetAlert{0%{-webkit-transform:scale(1);transform:scale(1)}1%{-webkit-transform:scale(.5);transform:scale(.5)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}to{-webkit-transform:scale(1);transform:scale(1)}}@keyframes showSweetAlert{0%{-webkit-transform:scale(1);transform:scale(1)}1%{-webkit-transform:scale(.5);transform:scale(.5)}45%{-webkit-transform:scale(1.05);transform:scale(1.05)}80%{-webkit-transform:scale(.95);transform:scale(.95)}to{-webkit-transform:scale(1);transform:scale(1)}}',\"\"])},function(t,e){function n(t,e){var n=t[1]||\"\",r=t[3];if(!r)return n;if(e&&\"function\"==typeof btoa){var i=o(r);return[n].concat(r.sources.map(function(t){return\"/*# sourceURL=\"+r.sourceRoot+t+\" */\"})).concat([i]).join(\"\\n\")}return[n].join(\"\\n\")}function o(t){return\"\"}t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var o=n(e,t);return e[2]?\"@media \"+e[2]+\"{\"+o+\"}\":o}).join(\"\")},e.i=function(t,n){\"string\"==typeof t&&(t=[[null,t,\"\"]]);for(var o={},r=0;r<this.length;r++){var i=this[r][0];\"number\"==typeof i&&(o[i]=!0)}for(r=0;r<t.length;r++){var a=t[r];\"number\"==typeof a[0]&&o[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]=\"(\"+a[2]+\") and (\"+n+\")\"),e.push(a))}},e}},function(t,e,n){function o(t,e){for(var n=0;n<t.length;n++){var o=t[n],r=m[o.id];if(r){r.refs++;for(var i=0;i<r.parts.length;i++)r.parts[i](o.parts[i]);for(;i<o.parts.length;i++)r.parts.push(u(o.parts[i],e))}else{for(var a=[],i=0;i<o.parts.length;i++)a.push(u(o.parts[i],e));m[o.id]={id:o.id,refs:1,parts:a}}}}function r(t,e){for(var n=[],o={},r=0;r<t.length;r++){var i=t[r],a=e.base?i[0]+e.base:i[0],s=i[1],c=i[2],l=i[3],u={css:s,media:c,sourceMap:l};o[a]?o[a].parts.push(u):n.push(o[a]={id:a,parts:[u]})}return n}function i(t,e){var n=v(t.insertInto);if(!n)throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");var o=w[w.length-1];if(\"top\"===t.insertAt)o?o.nextSibling?n.insertBefore(e,o.nextSibling):n.appendChild(e):n.insertBefore(e,n.firstChild),w.push(e);else{if(\"bottom\"!==t.insertAt)throw new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");n.appendChild(e)}}function a(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=w.indexOf(t);e>=0&&w.splice(e,1)}function s(t){var e=document.createElement(\"style\");return t.attrs.type=\"text/css\",l(e,t.attrs),i(t,e),e}function c(t){var e=document.createElement(\"link\");return t.attrs.type=\"text/css\",t.attrs.rel=\"stylesheet\",l(e,t.attrs),i(t,e),e}function l(t,e){Object.keys(e).forEach(function(n){t.setAttribute(n,e[n])})}function u(t,e){var n,o,r,i;if(e.transform&&t.css){if(!(i=e.transform(t.css)))return function(){};t.css=i}if(e.singleton){var l=h++;n=g||(g=s(e)),o=f.bind(null,n,l,!1),r=f.bind(null,n,l,!0)}else t.sourceMap&&\"function\"==typeof URL&&\"function\"==typeof URL.createObjectURL&&\"function\"==typeof URL.revokeObjectURL&&\"function\"==typeof Blob&&\"function\"==typeof btoa?(n=c(e),o=p.bind(null,n,e),r=function(){a(n),n.href&&URL.revokeObjectURL(n.href)}):(n=s(e),o=d.bind(null,n),r=function(){a(n)});return o(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;o(t=e)}else r()}}function f(t,e,n,o){var r=n?\"\":o.css;if(t.styleSheet)t.styleSheet.cssText=x(e,r);else{var i=document.createTextNode(r),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(i,a[e]):t.appendChild(i)}}function d(t,e){var n=e.css,o=e.media;if(o&&t.setAttribute(\"media\",o),t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}function p(t,e,n){var o=n.css,r=n.sourceMap,i=void 0===e.convertToAbsoluteUrls&&r;(e.convertToAbsoluteUrls||i)&&(o=y(o)),r&&(o+=\"\\n/*# sourceMappingURL=data:application/json;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+\" */\");var a=new Blob([o],{type:\"text/css\"}),s=t.href;t.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}var m={},b=function(t){var e;return function(){return void 0===e&&(e=t.apply(this,arguments)),e}}(function(){return window&&document&&document.all&&!window.atob}),v=function(t){var e={};return function(n){return void 0===e[n]&&(e[n]=t.call(this,n)),e[n]}}(function(t){return document.querySelector(t)}),g=null,h=0,w=[],y=n(15);t.exports=function(t,e){if(\"undefined\"!=typeof DEBUG&&DEBUG&&\"object\"!=typeof document)throw new Error(\"The style-loader cannot be used in a non-browser environment\");e=e||{},e.attrs=\"object\"==typeof e.attrs?e.attrs:{},e.singleton||(e.singleton=b()),e.insertInto||(e.insertInto=\"head\"),e.insertAt||(e.insertAt=\"bottom\");var n=r(t,e);return o(n,e),function(t){for(var i=[],a=0;a<n.length;a++){var s=n[a],c=m[s.id];c.refs--,i.push(c)}if(t){o(r(t,e),e)}for(var a=0;a<i.length;a++){var c=i[a];if(0===c.refs){for(var l=0;l<c.parts.length;l++)c.parts[l]();delete m[c.id]}}}};var x=function(){var t=[];return function(e,n){return t[e]=n,t.filter(Boolean).join(\"\\n\")}}()},function(t,e){t.exports=function(t){var e=\"undefined\"!=typeof window&&window.location;if(!e)throw new Error(\"fixUrls requires window.location\");if(!t||\"string\"!=typeof t)return t;var n=e.protocol+\"//\"+e.host,o=n+e.pathname.replace(/\\/[^\\/]*$/,\"/\");return t.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi,function(t,e){var r=e.trim().replace(/^\"(.*)\"$/,function(t,e){return e}).replace(/^'(.*)'$/,function(t,e){return e});if(/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(r))return t;var i;return i=0===r.indexOf(\"//\")?r:0===r.indexOf(\"/\")?n+r:o+r.replace(/^\\.\\//,\"\"),\"url(\"+JSON.stringify(i)+\")\"})}},function(t,e,n){var o=n(17);\"undefined\"==typeof window||window.Promise||(window.Promise=o),n(21),String.prototype.includes||(String.prototype.includes=function(t,e){\"use strict\";return\"number\"!=typeof e&&(e=0),!(e+t.length>this.length)&&-1!==this.indexOf(t,e)}),Array.prototype.includes||Object.defineProperty(Array.prototype,\"includes\",{value:function(t,e){if(null==this)throw new TypeError('\"this\" is null or not defined');var n=Object(this),o=n.length>>>0;if(0===o)return!1;for(var r=0|e,i=Math.max(r>=0?r:o-Math.abs(r),0);i<o;){if(function(t,e){return t===e||\"number\"==typeof t&&\"number\"==typeof e&&isNaN(t)&&isNaN(e)}(n[i],t))return!0;i++}return!1}}),\"undefined\"!=typeof window&&function(t){t.forEach(function(t){t.hasOwnProperty(\"remove\")||Object.defineProperty(t,\"remove\",{configurable:!0,enumerable:!0,writable:!0,value:function(){this.parentNode.removeChild(this)}})})}([Element.prototype,CharacterData.prototype,DocumentType.prototype])},function(t,e,n){(function(e){!function(n){function o(){}function r(t,e){return function(){t.apply(e,arguments)}}function i(t){if(\"object\"!=typeof this)throw new TypeError(\"Promises must be constructed via new\");if(\"function\"!=typeof t)throw new TypeError(\"not a function\");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],f(t,this)}function a(t,e){for(;3===t._state;)t=t._value;if(0===t._state)return void t._deferreds.push(e);t._handled=!0,i._immediateFn(function(){var n=1===t._state?e.onFulfilled:e.onRejected;if(null===n)return void(1===t._state?s:c)(e.promise,t._value);var o;try{o=n(t._value)}catch(t){return void c(e.promise,t)}s(e.promise,o)})}function s(t,e){try{if(e===t)throw new TypeError(\"A promise cannot be resolved with itself.\");if(e&&(\"object\"==typeof e||\"function\"==typeof e)){var n=e.then;if(e instanceof i)return t._state=3,t._value=e,void l(t);if(\"function\"==typeof n)return void f(r(n,e),t)}t._state=1,t._value=e,l(t)}catch(e){c(t,e)}}function c(t,e){t._state=2,t._value=e,l(t)}function l(t){2===t._state&&0===t._deferreds.length&&i._immediateFn(function(){t._handled||i._unhandledRejectionFn(t._value)});for(var e=0,n=t._deferreds.length;e<n;e++)a(t,t._deferreds[e]);t._deferreds=null}function u(t,e,n){this.onFulfilled=\"function\"==typeof t?t:null,this.onRejected=\"function\"==typeof e?e:null,this.promise=n}function f(t,e){var n=!1;try{t(function(t){n||(n=!0,s(e,t))},function(t){n||(n=!0,c(e,t))})}catch(t){if(n)return;n=!0,c(e,t)}}var d=setTimeout;i.prototype.catch=function(t){return this.then(null,t)},i.prototype.then=function(t,e){var n=new this.constructor(o);return a(this,new u(t,e,n)),n},i.all=function(t){var e=Array.prototype.slice.call(t);return new i(function(t,n){function o(i,a){try{if(a&&(\"object\"==typeof a||\"function\"==typeof a)){var s=a.then;if(\"function\"==typeof s)return void s.call(a,function(t){o(i,t)},n)}e[i]=a,0==--r&&t(e)}catch(t){n(t)}}if(0===e.length)return t([]);for(var r=e.length,i=0;i<e.length;i++)o(i,e[i])})},i.resolve=function(t){return t&&\"object\"==typeof t&&t.constructor===i?t:new i(function(e){e(t)})},i.reject=function(t){return new i(function(e,n){n(t)})},i.race=function(t){return new i(function(e,n){for(var o=0,r=t.length;o<r;o++)t[o].then(e,n)})},i._immediateFn=\"function\"==typeof e&&function(t){e(t)}||function(t){d(t,0)},i._unhandledRejectionFn=function(t){\"undefined\"!=typeof console&&console&&console.warn(\"Possible Unhandled Promise Rejection:\",t)},i._setImmediateFn=function(t){i._immediateFn=t},i._setUnhandledRejectionFn=function(t){i._unhandledRejectionFn=t},void 0!==t&&t.exports?t.exports=i:n.Promise||(n.Promise=i)}(this)}).call(e,n(18).setImmediate)},function(t,e,n){function o(t,e){this._id=t,this._clearFn=e}var r=Function.prototype.apply;e.setTimeout=function(){return new o(r.call(setTimeout,window,arguments),clearTimeout)},e.setInterval=function(){return new o(r.call(setInterval,window,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},o.prototype.unref=o.prototype.ref=function(){},o.prototype.close=function(){this._clearFn.call(window,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout(function(){t._onTimeout&&t._onTimeout()},e))},n(19),e.setImmediate=setImmediate,e.clearImmediate=clearImmediate},function(t,e,n){(function(t,e){!function(t,n){\"use strict\";function o(t){\"function\"!=typeof t&&(t=new Function(\"\"+t));for(var e=new Array(arguments.length-1),n=0;n<e.length;n++)e[n]=arguments[n+1];var o={callback:t,args:e};return l[c]=o,s(c),c++}function r(t){delete l[t]}function i(t){var e=t.callback,o=t.args;switch(o.length){case 0:e();break;case 1:e(o[0]);break;case 2:e(o[0],o[1]);break;case 3:e(o[0],o[1],o[2]);break;default:e.apply(n,o)}}function a(t){if(u)setTimeout(a,0,t);else{var e=l[t];if(e){u=!0;try{i(e)}finally{r(t),u=!1}}}}if(!t.setImmediate){var s,c=1,l={},u=!1,f=t.document,d=Object.getPrototypeOf&&Object.getPrototypeOf(t);d=d&&d.setTimeout?d:t,\"[object process]\"==={}.toString.call(t.process)?function(){s=function(t){e.nextTick(function(){a(t)})}}():function(){if(t.postMessage&&!t.importScripts){var e=!0,n=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage(\"\",\"*\"),t.onmessage=n,e}}()?function(){var e=\"setImmediate$\"+Math.random()+\"$\",n=function(n){n.source===t&&\"string\"==typeof n.data&&0===n.data.indexOf(e)&&a(+n.data.slice(e.length))};t.addEventListener?t.addEventListener(\"message\",n,!1):t.attachEvent(\"onmessage\",n),s=function(n){t.postMessage(e+n,\"*\")}}():t.MessageChannel?function(){var t=new MessageChannel;t.port1.onmessage=function(t){a(t.data)},s=function(e){t.port2.postMessage(e)}}():f&&\"onreadystatechange\"in f.createElement(\"script\")?function(){var t=f.documentElement;s=function(e){var n=f.createElement(\"script\");n.onreadystatechange=function(){a(e),n.onreadystatechange=null,t.removeChild(n),n=null},t.appendChild(n)}}():function(){s=function(t){setTimeout(a,0,t)}}(),d.setImmediate=o,d.clearImmediate=r}}(\"undefined\"==typeof self?void 0===t?this:t:self)}).call(e,n(7),n(20))},function(t,e){function n(){throw new Error(\"setTimeout has not been defined\")}function o(){throw new Error(\"clearTimeout has not been defined\")}function r(t){if(u===setTimeout)return setTimeout(t,0);if((u===n||!u)&&setTimeout)return u=setTimeout,setTimeout(t,0);try{return u(t,0)}catch(e){try{return u.call(null,t,0)}catch(e){return u.call(this,t,0)}}}function i(t){if(f===clearTimeout)return clearTimeout(t);if((f===o||!f)&&clearTimeout)return f=clearTimeout,clearTimeout(t);try{return f(t)}catch(e){try{return f.call(null,t)}catch(e){return f.call(this,t)}}}function a(){b&&p&&(b=!1,p.length?m=p.concat(m):v=-1,m.length&&s())}function s(){if(!b){var t=r(a);b=!0;for(var e=m.length;e;){for(p=m,m=[];++v<e;)p&&p[v].run();v=-1,e=m.length}p=null,b=!1,i(t)}}function c(t,e){this.fun=t,this.array=e}function l(){}var u,f,d=t.exports={};!function(){try{u=\"function\"==typeof setTimeout?setTimeout:n}catch(t){u=n}try{f=\"function\"==typeof clearTimeout?clearTimeout:o}catch(t){f=o}}();var p,m=[],b=!1,v=-1;d.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];m.push(new c(t,e)),1!==m.length||b||r(s)},c.prototype.run=function(){this.fun.apply(null,this.array)},d.title=\"browser\",d.browser=!0,d.env={},d.argv=[],d.version=\"\",d.versions={},d.on=l,d.addListener=l,d.once=l,d.off=l,d.removeListener=l,d.removeAllListeners=l,d.emit=l,d.prependListener=l,d.prependOnceListener=l,d.listeners=function(t){return[]},d.binding=function(t){throw new Error(\"process.binding is not supported\")},d.cwd=function(){return\"/\"},d.chdir=function(t){throw new Error(\"process.chdir is not supported\")},d.umask=function(){return 0}},function(t,e,n){\"use strict\";n(22).polyfill()},function(t,e,n){\"use strict\";function o(t,e){if(void 0===t||null===t)throw new TypeError(\"Cannot convert first argument to object\");for(var n=Object(t),o=1;o<arguments.length;o++){var r=arguments[o];if(void 0!==r&&null!==r)for(var i=Object.keys(Object(r)),a=0,s=i.length;a<s;a++){var c=i[a],l=Object.getOwnPropertyDescriptor(r,c);void 0!==l&&l.enumerable&&(n[c]=r[c])}}return n}function r(){Object.assign||Object.defineProperty(Object,\"assign\",{enumerable:!1,configurable:!0,writable:!0,value:o})}t.exports={assign:o,polyfill:r}},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(24),r=n(6),i=n(5),a=n(36),s=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];if(\"undefined\"!=typeof window){var n=a.getOpts.apply(void 0,t);return new Promise(function(t,e){i.default.promise={resolve:t,reject:e},o.default(n),setTimeout(function(){r.openModal()})})}};s.close=r.onAction,s.getState=r.getState,s.setActionValue=i.setActionValue,s.stopLoading=r.stopLoading,s.setDefaults=a.setDefaults,e.default=s},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(1),r=n(0),i=r.default.MODAL,a=n(4),s=n(34),c=n(35),l=n(1);e.init=function(t){o.getNode(i)||(document.body||l.throwErr(\"You can only use SweetAlert AFTER the DOM has loaded!\"),s.default(),a.default()),a.initModalContent(t),c.default(t)},e.default=e.init},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(0),r=o.default.MODAL;e.modalMarkup='\\n  <div class=\"'+r+'\" role=\"dialog\" aria-modal=\"true\"></div>',e.default=e.modalMarkup},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(0),r=o.default.OVERLAY,i='<div \\n    class=\"'+r+'\"\\n    tabIndex=\"-1\">\\n  </div>';e.default=i},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(0),r=o.default.ICON;e.errorIconMarkup=function(){var t=r+\"--error\",e=t+\"__line\";return'\\n    <div class=\"'+t+'__x-mark\">\\n      <span class=\"'+e+\" \"+e+'--left\"></span>\\n      <span class=\"'+e+\" \"+e+'--right\"></span>\\n    </div>\\n  '},e.warningIconMarkup=function(){var t=r+\"--warning\";return'\\n    <span class=\"'+t+'__body\">\\n      <span class=\"'+t+'__dot\"></span>\\n    </span>\\n  '},e.successIconMarkup=function(){var t=r+\"--success\";return'\\n    <span class=\"'+t+\"__line \"+t+'__line--long\"></span>\\n    <span class=\"'+t+\"__line \"+t+'__line--tip\"></span>\\n\\n    <div class=\"'+t+'__ring\"></div>\\n    <div class=\"'+t+'__hide-corners\"></div>\\n  '}},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(0),r=o.default.CONTENT;e.contentMarkup='\\n  <div class=\"'+r+'\">\\n\\n  </div>\\n'},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(0),r=o.default.BUTTON_CONTAINER,i=o.default.BUTTON,a=o.default.BUTTON_LOADER;e.buttonMarkup='\\n  <div class=\"'+r+'\">\\n\\n    <button\\n      class=\"'+i+'\"\\n    ></button>\\n\\n    <div class=\"'+a+'\">\\n      <div></div>\\n      <div></div>\\n      <div></div>\\n    </div>\\n\\n  </div>\\n'},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(4),r=n(2),i=n(0),a=i.default.ICON,s=i.default.ICON_CUSTOM,c=[\"error\",\"warning\",\"success\",\"info\"],l={error:r.errorIconMarkup(),warning:r.warningIconMarkup(),success:r.successIconMarkup()},u=function(t,e){var n=a+\"--\"+t;e.classList.add(n);var o=l[t];o&&(e.innerHTML=o)},f=function(t,e){e.classList.add(s);var n=document.createElement(\"img\");n.src=t,e.appendChild(n)},d=function(t){if(t){var e=o.injectElIntoModal(r.iconMarkup);c.includes(t)?u(t,e):f(t,e)}};e.default=d},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(2),r=n(4),i=function(t){navigator.userAgent.includes(\"AppleWebKit\")&&(t.style.display=\"none\",t.offsetHeight,t.style.display=\"\")};e.initTitle=function(t){if(t){var e=r.injectElIntoModal(o.titleMarkup);e.textContent=t,i(e)}},e.initText=function(t){if(t){var e=document.createDocumentFragment();t.split(\"\\n\").forEach(function(t,n,o){e.appendChild(document.createTextNode(t)),n<o.length-1&&e.appendChild(document.createElement(\"br\"))});var n=r.injectElIntoModal(o.textMarkup);n.appendChild(e),i(n)}}},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(1),r=n(4),i=n(0),a=i.default.BUTTON,s=i.default.DANGER_BUTTON,c=n(3),l=n(2),u=n(6),f=n(5),d=function(t,e,n){var r=e.text,i=e.value,d=e.className,p=e.closeModal,m=o.stringToNode(l.buttonMarkup),b=m.querySelector(\".\"+a),v=a+\"--\"+t;if(b.classList.add(v),d){(Array.isArray(d)?d:d.split(\" \")).filter(function(t){return t.length>0}).forEach(function(t){b.classList.add(t)})}n&&t===c.CONFIRM_KEY&&b.classList.add(s),b.textContent=r;var g={};return g[t]=i,f.setActionValue(g),f.setActionOptionsFor(t,{closeModal:p}),b.addEventListener(\"click\",function(){return u.onAction(t)}),m},p=function(t,e){var n=r.injectElIntoModal(l.footerMarkup);for(var o in t){var i=t[o],a=d(o,i,e);i.visible&&n.appendChild(a)}0===n.children.length&&n.remove()};e.default=p},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(3),r=n(4),i=n(2),a=n(5),s=n(6),c=n(0),l=c.default.CONTENT,u=function(t){t.addEventListener(\"input\",function(t){var e=t.target,n=e.value;a.setActionValue(n)}),t.addEventListener(\"keyup\",function(t){if(\"Enter\"===t.key)return s.onAction(o.CONFIRM_KEY)}),setTimeout(function(){t.focus(),a.setActionValue(\"\")},0)},f=function(t,e,n){var o=document.createElement(e),r=l+\"__\"+e;o.classList.add(r);for(var i in n){var a=n[i];o[i]=a}\"input\"===e&&u(o),t.appendChild(o)},d=function(t){if(t){var e=r.injectElIntoModal(i.contentMarkup),n=t.element,o=t.attributes;\"string\"==typeof n?f(e,n,o):e.appendChild(n)}};e.default=d},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(1),r=n(2),i=function(){var t=o.stringToNode(r.overlayMarkup);document.body.appendChild(t)};e.default=i},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(5),r=n(6),i=n(1),a=n(3),s=n(0),c=s.default.MODAL,l=s.default.BUTTON,u=s.default.OVERLAY,f=function(t){t.preventDefault(),v()},d=function(t){t.preventDefault(),g()},p=function(t){if(o.default.isOpen)switch(t.key){case\"Escape\":return r.onAction(a.CANCEL_KEY)}},m=function(t){if(o.default.isOpen)switch(t.key){case\"Tab\":return f(t)}},b=function(t){if(o.default.isOpen)return\"Tab\"===t.key&&t.shiftKey?d(t):void 0},v=function(){var t=i.getNode(l);t&&(t.tabIndex=0,t.focus())},g=function(){var t=i.getNode(c),e=t.querySelectorAll(\".\"+l),n=e.length-1,o=e[n];o&&o.focus()},h=function(t){t[t.length-1].addEventListener(\"keydown\",m)},w=function(t){t[0].addEventListener(\"keydown\",b)},y=function(){var t=i.getNode(c),e=t.querySelectorAll(\".\"+l);e.length&&(h(e),w(e))},x=function(t){if(i.getNode(u)===t.target)return r.onAction(a.CANCEL_KEY)},_=function(t){var e=i.getNode(u);e.removeEventListener(\"click\",x),t&&e.addEventListener(\"click\",x)},k=function(t){o.default.timer&&clearTimeout(o.default.timer),t&&(o.default.timer=window.setTimeout(function(){return r.onAction(a.CANCEL_KEY)},t))},O=function(t){t.closeOnEsc?document.addEventListener(\"keyup\",p):document.removeEventListener(\"keyup\",p),t.dangerMode?v():g(),y(),_(t.closeOnClickOutside),k(t.timer)};e.default=O},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(1),r=n(3),i=n(37),a=n(38),s={title:null,text:null,icon:null,buttons:r.defaultButtonList,content:null,className:null,closeOnClickOutside:!0,closeOnEsc:!0,dangerMode:!1,timer:null},c=Object.assign({},s);e.setDefaults=function(t){c=Object.assign({},s,t)};var l=function(t){var e=t&&t.button,n=t&&t.buttons;return void 0!==e&&void 0!==n&&o.throwErr(\"Cannot set both 'button' and 'buttons' options!\"),void 0!==e?{confirm:e}:n},u=function(t){return o.ordinalSuffixOf(t+1)},f=function(t,e){o.throwErr(u(e)+\" argument ('\"+t+\"') is invalid\")},d=function(t,e){var n=t+1,r=e[n];o.isPlainObject(r)||void 0===r||o.throwErr(\"Expected \"+u(n)+\" argument ('\"+r+\"') to be a plain object\")},p=function(t,e){var n=t+1,r=e[n];void 0!==r&&o.throwErr(\"Unexpected \"+u(n)+\" argument (\"+r+\")\")},m=function(t,e,n,r){var i=typeof e,a=\"string\"===i,s=e instanceof Element;if(a){if(0===n)return{text:e};if(1===n)return{text:e,title:r[0]};if(2===n)return d(n,r),{icon:e};f(e,n)}else{if(s&&0===n)return d(n,r),{content:e};if(o.isPlainObject(e))return p(n,r),e;f(e,n)}};e.getOpts=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n={};t.forEach(function(e,o){var r=m(0,e,o,t);Object.assign(n,r)});var o=l(n);n.buttons=r.getButtonListOpts(o),delete n.button,n.content=i.getContentOpts(n.content);var u=Object.assign({},s,c,n);return Object.keys(u).forEach(function(t){a.DEPRECATED_OPTS[t]&&a.logDeprecation(t)}),u}},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=n(1),r={element:\"input\",attributes:{placeholder:\"\"}};e.getContentOpts=function(t){var e={};return o.isPlainObject(t)?Object.assign(e,t):t instanceof Element?{element:t}:\"input\"===t?r:null}},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e.logDeprecation=function(t){var n=e.DEPRECATED_OPTS[t],o=n.onlyRename,r=n.replacement,i=n.subOption,a=n.link,s=o?\"renamed\":\"deprecated\",c='SweetAlert warning: \"'+t+'\" option has been '+s+\".\";if(r){c+=\" Please use\"+(i?' \"'+i+'\" in ':\" \")+'\"'+r+'\" instead.'}var l=\"https://sweetalert.js.org\";c+=a?\" More details: \"+l+a:\" More details: \"+l+\"/guides/#upgrading-from-1x\",console.warn(c)},e.DEPRECATED_OPTS={type:{replacement:\"icon\",link:\"/docs/#icon\"},imageUrl:{replacement:\"icon\",link:\"/docs/#icon\"},customClass:{replacement:\"className\",onlyRename:!0,link:\"/docs/#classname\"},imageSize:{},showCancelButton:{replacement:\"buttons\",link:\"/docs/#buttons\"},showConfirmButton:{replacement:\"button\",link:\"/docs/#button\"},confirmButtonText:{replacement:\"button\",link:\"/docs/#button\"},confirmButtonColor:{},cancelButtonText:{replacement:\"buttons\",link:\"/docs/#buttons\"},closeOnConfirm:{replacement:\"button\",subOption:\"closeModal\",link:\"/docs/#button\"},closeOnCancel:{replacement:\"buttons\",subOption:\"closeModal\",link:\"/docs/#buttons\"},showLoaderOnConfirm:{replacement:\"buttons\"},animation:{},inputType:{replacement:\"content\",link:\"/docs/#content\"},inputValue:{replacement:\"content\",link:\"/docs/#content\"},inputPlaceholder:{replacement:\"content\",link:\"/docs/#content\"},html:{replacement:\"content\",link:\"/docs/#content\"},allowEscapeKey:{replacement:\"closeOnEsc\",onlyRename:!0,link:\"/docs/#closeonesc\"},allowClickOutside:{replacement:\"closeOnClickOutside\",onlyRename:!0,link:\"/docs/#closeonclickoutside\"}}}])});","let waterDrop = new Audio();\nwaterDrop.src = \"waterdrop.mp3\";\n\nlet randomWords = require(\"random-words\");\nimport swal from \"sweetalert\";\n\nlet loosingMsg = [\n  \"that was tough\",\n  \"that was tricky\",\n  \"you tried your best\",\n  \"it was so easy\",\n  \"Game over\",\n  \"nice try\"\n];\n\nlet winningMsg = [\n  \"congrats you win\",\n  \"you did it good job\",\n  \"that was close good job\",\n  \"i am so proud of you\",\n  \"wow you think like a computer\",\n  \"you are on fire keep it up\"\n];\nlet randomMsg = Math.floor(Math.random() * loosingMsg.length);\nlet randomWmessage = Math.floor(Math.random() * winningMsg.length);\n\nlet words = randomWords(800);\n\nlet randomLetter = words;\nlet twoLetter = [];\nlet threeLetter = [];\nlet fourLetter = [];\nlet fiveLetter = [];\nlet sixLetter = [];\nlet sevenLetter = [];\nlet eightLetter = [];\nlet nineLetter = [];\nlet tenLetter = [];\nlet megaLetter = [];\nfor (let i = 0; i < words.length; i++) {\n  if (words[i].length == 2) {\n    twoLetter.push(words[i]);\n  } else if (words[i].length == 3) {\n    threeLetter.push(words[i]);\n  } else if (words[i].length == 4) {\n    fourLetter.push(words[i]);\n  } else if (words[i].length == 5) {\n    fiveLetter.push(words[i]);\n  } else if (words[i].length == 6) {\n    sixLetter.push(words[i]);\n  } else if (words[i].length == 7) {\n    sevenLetter.push(words[i]);\n  } else if (words[i].length == 8) {\n    eightLetter.push(words[i]);\n  } else if (words[i].length == 9) {\n    nineLetter.push(words[i]);\n  } else if (words[i].length == 10) {\n    tenLetter.push(words[i]);\n  } else if (words[i].length > 10) {\n    megaLetter.push(words[i]);\n  }\n}\nlet categoryValue = document.querySelector(\"#category-select\");\ncategoryValue.addEventListener(\"change\", categorySelect);\nlet myButton = document.querySelector(\".myButton\");\nlet myHeader = document.querySelector(\".buttonDiv\");\nlet randomWord;\n\nmyButton.addEventListener(\"click\", function(evt) {\n  evt.preventDefault();\n  location.reload();\n});\n\nlet life = document.querySelector(\".life-span\");\nlet lifes = 6;\nlife.innerHTML = `❤️: 6`;\n\nlet wordBank;\nfunction categorySelect(evt) {\n  if (evt.target.value == \"randomLetters\") {\n    wordBank = randomLetter;\n  } else if (evt.target.value == \"twoLetters\") {\n    wordBank = twoLetter;\n  } else if (evt.target.value == \"threeLetters\") {\n    wordBank = threeLetter;\n  } else if (evt.target.value == \"fourLetters\") {\n    wordBank = fourLetter;\n  } else if (evt.target.value == \"fiveLetters\") {\n    wordBank = fiveLetter;\n  } else if (evt.target.value == \"sixLetters\") {\n    wordBank = sixLetter;\n  } else if (evt.target.value == \"sevenLetters\") {\n    wordBank = sevenLetter;\n  } else if (evt.target.value == \"eightLetters\") {\n    wordBank = eightLetter;\n  } else if (evt.target.value == \"nineLetters\") {\n    wordBank = nineLetter;\n  } else if (evt.target.value == \"tenLetters\") {\n    wordBank = tenLetter;\n  } else if (evt.target.value == \"megaLetters\") {\n    wordBank = megaLetter;\n    lifes = 5;\n    life.innerHTML = `❤️: 5`;\n    let msg = new SpeechSynthesisUtterance(\"Level Mega Hard, 5 lifes\");\n    msg.rate = 0.95;\n    window.speechSynthesis.speak(msg);\n  }\n\n  let random = Math.floor(Math.random() * wordBank.length);\n\n  randomWord = wordBank[random].toUpperCase();\n  let myP = document.querySelector(\".dashes\");\n  for (let i = 0; i < randomWord.length; i++) {\n    console.log(randomWord[i]);\n    let myDiv = document.createElement(\"div\");\n    myDiv.className = \"myDivs\";\n    let mySpan = document.createElement(\"span\");\n    mySpan.id = `${i}`;\n    mySpan.className = \"correct-letter\";\n    mySpan.setAttribute(\"data-id\", `${i}`);\n    mySpan.classList.add(\"poof\");\n    myP.appendChild(myDiv);\n    myDiv.appendChild(mySpan);\n    mySpan.innerHTML = `${randomWord[i]}`;\n  }\n}\n\nlet myKeyBoard = document.querySelector(\".container\");\nmyKeyBoard.addEventListener(\"click\", findLetter);\nlet score = 0;\nlet myhanger = document.querySelector(\".hangman-img\");\n\nfunction findLetter(evt) {\n  evt.preventDefault();\n  waterDrop.pause();\n  waterDrop.currentTime = 0;\n  waterDrop.volume = 1;\n  waterDrop.play();\n  if (evt.target.className == \"letter\") {\n    evt.target.classList.add(\"poof\");\n    console.log(evt.target.id);\n    for (let i = 0; i < randomWord.length; i++) {\n      if (evt.target.id == document.getElementById(`${i}`).textContent) {\n        document.getElementById(`${i}`).classList.remove(\"poof\");\n        score += randomWord.length / randomWord.length;\n        let scoreSpan = document.querySelector(\".score-span\");\n        scoreSpan.innerHTML = `Score: 🤩 ${score}`;\n        if (randomWord.length - score == 3) {\n          let msg = new SpeechSynthesisUtterance(\"You are so close\");\n          msg.rate = 0.95;\n          window.speechSynthesis.speak(msg);\n        }\n        if (score == randomWord.length) {\n          let msg = new SpeechSynthesisUtterance(\n            `${winningMsg[randomWmessage]}`\n          );\n          swal(\n            \"YOU WIN!\",\n            \"Choose a Category for the next Challange!\",\n            \"success\"\n          );\n          msg.rate = 0.9;\n          window.speechSynthesis.speak(msg);\n        }\n        if (score == randomWord.length) {\n          setTimeout(function() {\n            location.reload();\n          }, 5000);\n        }\n      }\n    }\n  }\n\n  if (!randomWord.includes(`${evt.target.id}`)) {\n    let errorSound = new Audio();\n    errorSound.src = \"error.mp3\";\n    errorSound.play();\n    if (lifes == 2) {\n      let msg = new SpeechSynthesisUtterance(\"1 more chance\");\n      msg.rate = 0.95;\n      window.speechSynthesis.speak(msg);\n    }\n    if (lifes <= 1) {\n      setTimeout(function() {\n        swal(\n          \"Game Over!\",\n          `Answer was ${randomWord.toLocaleLowerCase()}......Better Luck Next time!`,\n          \"error\"\n        );\n      }, 2000);\n      let msg = new SpeechSynthesisUtterance(\n        `${loosingMsg[randomMsg]} the answer was ` +\n          randomWord.toLocaleLowerCase()\n      );\n      msg.rate = 0.9;\n      window.speechSynthesis.speak(msg);\n      setTimeout(function() {\n        location.reload();\n      }, 7000);\n    }\n\n    console.log(\"wrong\");\n    lifes -= 1;\n    img += 1;\n    console.log(lifes);\n    life.innerHTML = `❤️: ${lifes}`;\n    if (img < 5) {\n      let hangImg = document.createElement(\"img\");\n      hangImg.setAttribute(\"src\", `Kaguya${img}.png`);\n      console.log(img + \" image #\");\n      hangImg.setAttribute(\"class\", \"kaguya1 kaguya\");\n      myhanger.appendChild(hangImg);\n    } else if (img == 5) {\n      let hangImg = document.createElement(\"img\");\n      hangImg.setAttribute(\"src\", `Kaguya${img}.png`);\n      hangImg.setAttribute(\"class\", \"kaguya5\");\n      myhanger.appendChild(hangImg);\n      console.log(\"true\");\n    } else if (img == 6) {\n      let hangImg = document.createElement(\"img\");\n      hangImg.setAttribute(\"src\", `Kaguya${img}.png`);\n      hangImg.setAttribute(\"class\", \"kaguya6\");\n      myhanger.appendChild(hangImg);\n      console.log(\"true\");\n    }\n  }\n}\n\nlet img = 0;\n\nlet mouse = {\n  x: undefined,\n  y: undefined\n};\nlet maxRadius = 40;\nlet minimumRadius = 10;\n\nlet backgroundSound = new Audio();\nbackgroundSound.src = \"bubbles.mp3\";\n\nlet canvas = document.querySelector(\"canvas\");\ncanvas.width = window.innerWidth;\ncanvas.height = window.innerHeight;\nlet c = canvas.getContext(\"2d\");\nwindow.addEventListener(\"mousemove\", function(evt) {\n  backgroundSound.volume = 0.069;\n  backgroundSound.play();\n  mouse.x = evt.x;\n  mouse.y = evt.y;\n});\n\nwindow.addEventListener(\"resize\", function() {\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n\n  init();\n});\n\nfunction Circle(x, y, dx, dy, radius) {\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this.radius = Math.floor(Math.random() * 10 + 1);\n\n  this.o = Math.random() * 2;\n  this.draw = function() {\n    c.beginPath();\n    c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n    c.stroke();\n  };\n  this.update = function() {\n    if (this.x + this.radius > innerWidth || this.x - this.radius < 0) {\n      this.dx = -this.dx;\n    }\n\n    if (this.y + this.radius > innerHeight || this.y - this.radius < 0) {\n      this.dy = -this.dy;\n    }\n\n    this.x += this.dx;\n    this.y += this.dy;\n    if (\n      innerWidth > 600 &&\n      mouse.x - this.x < 50 &&\n      mouse.x - this.x > -50 &&\n      mouse.y - this.y < 50 &&\n      mouse.y - this.y > -50\n    ) {\n      if (this.radius < maxRadius) {\n        this.radius += 1;\n      }\n    } else if (this.radius > minimumRadius) {\n      this.radius -= 1;\n    }\n    this.draw();\n  };\n}\n\nlet circlesArray = [];\n\nfunction init() {\n  circlesArray = [];\n  let i = 0;\n  while (i < 1000) {\n    let radius = 30;\n    let x = Math.random() * (innerWidth - radius * 2) + radius;\n    let y = Math.random() * (innerHeight - radius * 2) + radius;\n    let dx = (Math.random() - 0.5) * 1;\n    let dy = (Math.random() - 0.5) * 1;\n    c.strokeStyle = `rgb( 255, 255, 255)`;\n    circlesArray.push(new Circle(x, y, dx, dy, radius));\n    i++;\n  }\n}\n\nfunction animate() {\n  requestAnimationFrame(animate);\n  c.clearRect(0, 0, innerWidth, innerHeight);\n\n  for (let i = 0; i < circlesArray.length; i++) {\n    circlesArray[i].update();\n  }\n}\ninit();\nanimate();\n"]}